import "."
//import "../../vl_scatter" 1.0	
import "https://github.com/pavelvasev/vl_scatter" 1.0	
import github.pavelvasev.vl_scatter

ShowPoints {
  id: scen

  text: "Визуализация фазовых переменных"
  
  // см readme_dataset.md
  property var datasets: ["","data","data1-simmetric","data2-non-simm","https://dl.dropboxusercontent.com/u/523104/data1-simmetric-fun/"]
  property var initDatasetNumber: 1
  
  points.colors: scalars.output

  property var currentScalarValue: scalars.current ? scalars.current[ sel.currentIndex ] : undefined

  Row {
    property var tag: "top"
    spacing: 5
    Button {
      text: "Очистить файлы"
      width: 160
      onClicked: {
        scalars.file = "";
        trimesh.file = "";
        tips.file = "";
        scen.file = "";
        combofiles.value=0;
      }
    }

    Text {
      y: 3
      text: "Набор данных"
    }
 
    Param {
      id: combofiles
      guid: "dataset"
      values: datasets
      atoptext.visible: false
      aslider.visible: false
      value: initDatasetNumber
    }
  }

  property var presetDataDir: Qt.resolvedUrl( combofiles.values[ combofiles.value ] )
  onPresetDataDirChanged: {
       if (!presetDataDir) return;
        scalars.file = presetDataDir + "/voltage_.json";
        trimesh.file = presetDataDir + "/triangles.txt";
        tips.file = presetDataDir + "/tipsHans.info";
        scen.file = presetDataDir + "/coord.txt";
  }
  
  JsonScalars {
    id: scalars
    onTChanged: tips.tParam.value = t // связь от времени скаляров -> ко времени типсов
    
    paletter.hivalue: currentScalarValue
  }
  
  TrimeshOnPoints {
    pt: scen.points
    id: trimesh
  }

  ShowTips {
    id: tips
  }
 
  // обратная связь от времени типсов -> к времени скаляров
  Binding {
    target: scalars
    property: "t"
    value: tips.tParam.value
  }  

  /*
  SelectShow {
    source: scen.points
    id: sel
  }
  */
  
  
  SelectDoubleClick {
    source: scen.points
    id: sel
  }
  

  Text {
    y:3
    text: "Скалярное значение=" + currentScalarValue
    property var tag: "top"
  }

  GrPos {
  MultiScatterPlotWithPoi {
    property var idx: sel.currentIndex
    onIdxChanged: {
      grafik.selectedParam.value = idx+1;
    }

    anchors.fill: parent
    timeout: 1
    controlsTag: "rightbottom"
    id: grafik
    positions: scalars.scalars

    rminmax:[null,null,0,1]
    columnColors: [ [1,0,0], [0,1,0], [0,0,1], [1,1,0], [0,1,1], [1,0,1], [1,0.5,1] ];

    paramX.value: 0
    paramX.visible: false

    ScatterHiliteT {
      t: scalars.t
    }

    ScatterSolidLine {
    }

    Repeater {
      model: grafik.ycount
      HilitePoint {
        source: scen.points
        num: grafik.columnYvalues[ index ];
        color: grafik.columnColors[ index%grafik.columnColors.length ]
      }
    }

  }
  }

}
